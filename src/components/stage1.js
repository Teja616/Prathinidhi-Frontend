import React, { useEffect, useState } from 'react';
import { useLocation, useNavigate } from 'react-router-dom';

// Translations object - I'm keeping the same structure as dashboard
const translations = {
  en: {
    welcome: 'Welcome',
    governmentOfIndia: 'Government of India',
    ministryOfLaw: 'Ministry of Law and Justice',
    applicationForm: 'APPLICATION FORM FOR LEGAL AID / Grievance',
    legalAidApplication: 'Legal Aid / Grievance Application',
    applicationFor: 'Application For',
    receivedThrough: 'Received Through',
    state: 'State',
    district: 'District',
    taluka: 'Taluka',
    nextStage: 'Next Stage',
    backToDashboard: 'Back to Dashboard',
    chooseItem: '-- Choose an Item --',
    stage: 'Stage',
    of: 'of',
    logout: 'ЁЯЪк Logout',
    language: 'ЁЯМР Language',
    progress: 'Progress',
    pleaseSelect: 'Please select an option',
    errorMessage: 'Please fill all required fields',
    progressStatus: 'Stage 1 of 6: Basic Information',
    faq: 'FAQs',
    userGuide: 'User Guide',
    govPortal: 'Government Portal',
    terms: 'Terms and Conditions',
    contact: 'Contact',
    phone: 'Phone',
    email: 'Email',
    nalsa: 'NALSA - National Legal Service Authority',
    sclsc: 'SCLSC - Supreme Court Legal Service Committee',
    hclsc: 'HCLSC - High Court Legal Service Committee',
    slsa: 'SLSA - State Legal Service Authority',
    dlsa: 'DLSA - District Legal Service Authority',
    tlsc: 'TLSC - Taluka Legal Service Committee',
    slf: 'SLF - Self',
    rep: 'REP - Representative',
    org: 'ORG - Organization'
  },
  hi: {
    welcome: 'рд╕реНрд╡рд╛рдЧрдд рд╣реИ',
    governmentOfIndia: 'рднрд╛рд░рдд рд╕рд░рдХрд╛рд░',
    ministryOfLaw: 'рдХрд╛рдиреВрди рдФрд░ рдиреНрдпрд╛рдп рдордВрддреНрд░рд╛рд▓рдп',
    applicationForm: 'рдХрд╛рдиреВрдиреА рд╕рд╣рд╛рдпрддрд╛ / рд╢рд┐рдХрд╛рдпрдд рдХреЗ рд▓рд┐рдП рдЖрд╡реЗрджрди рдкрддреНрд░',
    legalAidApplication: 'рдХрд╛рдиреВрдиреА рд╕рд╣рд╛рдпрддрд╛ / рд╢рд┐рдХрд╛рдпрдд рдЖрд╡реЗрджрди',
    applicationFor: 'рдХреЗ рд▓рд┐рдП рдЖрд╡реЗрджрди',
    receivedThrough: 'рдХреЗ рдорд╛рдзреНрдпрдо рд╕реЗ рдкреНрд░рд╛рдкреНрдд',
    state: 'рд░рд╛рдЬреНрдп',
    district: 'рдЬрд┐рд▓рд╛',
    taluka: 'рддрд╛рд▓реБрдХрд╛',
    nextStage: 'рдЕрдЧрд▓рд╛ рдЪрд░рдг',
    backToDashboard: 'рдбреИрд╢рдмреЛрд░реНрдб рдкрд░ рд╡рд╛рдкрд╕ рдЬрд╛рдПрдВ',
    chooseItem: '-- рдПрдХ рдЖрдЗрдЯрдо рдЪреБрдиреЗрдВ --',
    stage: 'рдЪрд░рдг',
    of: 'рдХрд╛',
    logout: 'ЁЯЪк рд▓реЙрдЧрдЖрдЙрдЯ',
    language: 'ЁЯМР рднрд╛рд╖рд╛',
    progress: 'рдкреНрд░рдЧрддрд┐',
    pleaseSelect: 'рдХреГрдкрдпрд╛ рдПрдХ рд╡рд┐рдХрд▓реНрдк рдЪреБрдиреЗрдВ',
    errorMessage: 'рдХреГрдкрдпрд╛ рд╕рднреА рдЖрд╡рд╢реНрдпрдХ рдлрд╝реАрд▓реНрдб рднрд░реЗрдВ',
    progressStatus: 'рдЪрд░рдг 1 рдореЗрдВ рд╕реЗ 6: рдореВрд▓рднреВрдд рдЬрд╛рдирдХрд╛рд░реА',
    faq: 'рдЕрдХреНрд╕рд░ рдкреВрдЫреЗ рдЬрд╛рдиреЗ рд╡рд╛рд▓реЗ рдкреНрд░рд╢реНрди',
    userGuide: 'рдЙрдкрдпреЛрдЧрдХрд░реНрддрд╛ рдорд╛рд░реНрдЧрджрд░реНрд╢рд┐рдХрд╛',
    govPortal: 'рд╕рд░рдХрд╛рд░реА рдкреЛрд░реНрдЯрд▓',
    terms: 'рдирд┐рдпрдо рдФрд░ рд╢рд░реНрддреЗрдВ',
    contact: 'рд╕рдВрдкрд░реНрдХ рдХрд░реЗрдВ',
    phone: 'рдлрд╝реЛрди',
    email: 'рдИрдореЗрд▓',
    nalsa: 'рдирд╛рд▓рд╕рд╛ - рдиреЗрд╢рдирд▓ рд▓реАрдЧрд▓ рд╕рд░реНрд╡рд┐рд╕ рдЕрдереЙрд░рд┐рдЯреА',
    sclsc: 'рдПрд╕рд╕реАрдПрд▓рдПрд╕рд╕реА - рд╕реБрдкреНрд░реАрдо рдХреЛрд░реНрдЯ рд▓реАрдЧрд▓ рд╕рд░реНрд╡рд┐рд╕ рдХрдореЗрдЯреА',
    hclsc: 'рдПрдЪрд╕реАрдПрд▓рдПрд╕рд╕реА - рд╣рд╛рдИ рдХреЛрд░реНрдЯ рд▓реАрдЧрд▓ рд╕рд░реНрд╡рд┐рд╕ рдХрдореЗрдЯреА',
    slsa: 'рдПрд╕рдПрд▓рдПрд╕рдП - рд╕реНрдЯреЗрдЯ рд▓реАрдЧрд▓ рд╕рд░реНрд╡рд┐рд╕ рдЕрдереЙрд░рд┐рдЯреА',
    dlsa: 'рдбреАрдПрд▓рдПрд╕рдП - рдбрд┐рд╕реНрдЯреНрд░рд┐рдХреНрдЯ рд▓реАрдЧрд▓ рд╕рд░реНрд╡рд┐рд╕ рдЕрдереЙрд░рд┐рдЯреА',
    tlsc: 'рдЯреАрдПрд▓рдПрд╕рд╕реА - рддрд╛рд▓реБрдХрд╛ рд▓реАрдЧрд▓ рд╕рд░реНрд╡рд┐рд╕ рдХрдореЗрдЯреА',
    slf: 'рдПрд╕рдПрд▓рдПрдл - рд╕реНрд╡рдпрдВ',
    rep: 'рдЖрд░рдИрдкреА - рдкреНрд░рддрд┐рдирд┐рдзрд┐',
    org: 'рдУрдЖрд░рдЬреА - рд╕рдВрдЧрдарди'
  },
  te: {
    welcome: 'р░╕р▒Нр░╡р░╛р░Чр░др░В',
    governmentOfIndia: 'р░нр░╛р░░р░д р░кр▒Нр░░р░нр▒Бр░др▒Нр░╡р░В',
    ministryOfLaw: 'р░Ър░Яр▒Нр░Я р░ор░░р░┐р░пр▒Б р░ир▒Нр░пр░╛р░п р░ор░Вр░др▒Нр░░р░┐р░др▒Нр░╡ р░╢р░╛р░Ц',
    applicationForm: 'р░ир▒Нр░пр░╛р░п р░╕р░╣р░╛р░пр░В / р░лр░┐р░░р▒Нр░пр░╛р░жр▒Б р░жр░░р░Цр░╛р░╕р▒Нр░др▒Б р░лр░╛р░░р░ор▒Н',
    legalAidApplication: 'р░ир▒Нр░пр░╛р░п р░╕р░╣р░╛р░пр░В / р░лр░┐р░░р▒Нр░пр░╛р░жр▒Б р░жр░░р░Цр░╛р░╕р▒Нр░др▒Б',
    applicationFor: 'р░жр▒Зр░ир░┐р░Хр▒Лр░╕р░В р░жр░░р░Цр░╛р░╕р▒Нр░др▒Б',
    receivedThrough: 'р░жр▒Нр░╡р░╛р░░р░╛ р░Ер░Вр░жр░┐р░Вр░жр░┐',
    state: 'р░░р░╛р░╖р▒Нр░Яр▒Нр░░р░В',
    district: 'р░Ьр░┐р░▓р▒Нр░▓р░╛',
    taluka: 'р░др░╛р░▓р▒Вр░Хр░╛',
    nextStage: 'р░др░жр▒Бр░кр░░р░┐ р░жр░╢',
    backToDashboard: 'р░бр░╛р░╖р▒НтАМр░мр▒Лр░░р▒Нр░бр▒НтАМр░Хр▒Б р░╡р▒Жр░│р▒Нр░│р░Вр░бр░┐',
    chooseItem: '-- р░Ер░Вр░╢р░╛р░ир▒Нр░ир░┐ р░Ор░Вр░Ър▒Бр░Хр▒Лр░Вр░бр░┐ --',
    stage: 'р░жр░╢',
    of: 'р░▓р▒Л',
    logout: 'ЁЯЪк р░▓р░╛р░Чр▒Нр░Ер░╡р▒Бр░Яр▒Н',
    language: 'ЁЯМР р░нр░╛р░╖',
    progress: 'р░кр▒Нр░░р░Чр░др░┐',
    pleaseSelect: 'р░жр░пр░Ър▒Зр░╕р░┐ р░Тр░Х р░Ор░Вр░кр░┐р░Хр░ир▒Б р░Ор░Вр░Ър▒Бр░Хр▒Лр░Вр░бр░┐',
    errorMessage: 'р░жр░пр░Ър▒Зр░╕р░┐ р░Ер░╡р░╕р░░р░ор▒Ир░и р░Ер░ир▒Нр░ир░┐ р░Цр░╛р░│р▒Ар░▓р░ир▒Б р░кр▒Вр░░р░┐р░Вр░Ър░Вр░бр░┐',
    progressStatus: 'р░жр░╢ 1 р░пр▒Кр░Хр▒Нр░Х 6: р░кр▒Нр░░р░╛р░ер░ор░┐р░Х р░╕р░ор░╛р░Ър░╛р░░р░В',
    faq: 'р░др░░р░Ър▒Бр░Чр░╛ р░Ер░бр░┐р░Чр▒З р░кр▒Нр░░р░╢р▒Нр░ир░▓р▒Б',
  userGuide: 'р░╡р░┐р░ир░┐р░пр▒Лр░Чр░жр░╛р░░р▒Бр░▓ р░Чр▒Ир░бр▒Н',
  govPortal: 'р░╕р░░р▒Нр░Хр░╛р░░р▒Б р░кр▒Лр░░р▒Нр░Яр░▓р▒Н',
  terms: 'р░ир░┐р░мр░Вр░зр░ир░▓р▒Б р░ор░░р░┐р░пр▒Б р░╖р░░р░др▒Бр░▓р▒Б',
  contact: 'р░╕р░Вр░кр▒Нр░░р░жр░┐р░Вр░Ър░Вр░бр░┐',
  phone: 'р░лр▒Лр░ир▒Н',
  email: 'р░Зр░ор▒Жр░пр░┐р░▓р▒Н',
  nalsa: 'р░ир░▓р▒Нр░╕р░╛ - р░ир▒Зр░╖р░ир░▓р▒Н р░▓р▒Ар░Чр░▓р▒Н р░╕р░░р▒Нр░╡р▒Ар░╕р▒Н р░Ер░ер░╛р░░р░┐р░Яр▒А',
  sclsc: 'р░Ор░╕р▒Нр░╕р▒Ар░Ор░▓р▒Нр░Ор░╕р▒Нр░╕р▒А - р░╕р▒Бр░кр▒Нр░░р▒Ар░В р░Хр▒Лр░░р▒Нр░Яр▒Н р░▓р▒Ар░Чр░▓р▒Н р░╕р░░р▒Нр░╡р▒Ар░╕р▒Н р░Хр░ор░┐р░Яр▒А',
  hclsc: 'р░╣р▒Жр░Ър▒Нр░╕р▒Ар░Ор░▓р▒Нр░Ор░╕р▒Нр░╕р▒А - р░╣р▒Ир░Хр▒Лр░░р▒Нр░Яр▒Н р░▓р▒Ар░Чр░▓р▒Н р░╕р░░р▒Нр░╡р▒Ар░╕р▒Н р░Хр░ор░┐р░Яр▒А',
  slsa: 'р░Ор░╕р▒НтАМр░Ор░▓р▒Нр░Ор░╕р▒Нр░О - р░╕р▒Нр░Яр▒Зр░Яр▒Н р░▓р▒Ар░Чр░▓р▒Н р░╕р░░р▒Нр░╡р▒Ар░╕р▒Н р░Ер░ер░╛р░░р░┐р░Яр▒А',
  dlsa: 'р░бр░┐р░Ор░▓р▒Нр░Ор░╕р▒Нр░О - р░бр░┐р░╕р▒Нр░Яр▒Нр░░р░┐р░Хр▒Нр░Яр▒Н р░▓р▒Ар░Чр░▓р▒Н р░╕р░░р▒Нр░╡р▒Ар░╕р▒Н р░Ер░ер░╛р░░р░┐р░Яр▒А',
  tlsc: 'р░Яр░┐р░Ор░▓р▒Нр░Ор░╕р▒Нр░╕р▒А - р░др░╛р░▓р▒Вр░Хр░╛ р░▓р▒Ар░Чр░▓р▒Н р░╕р░░р▒Нр░╡р▒Ар░╕р▒Н р░Хр░ор░┐р░Яр▒А',
  slf: 'р░Ор░╕р▒НтАМр░Ор░▓р▒НтАМр░Ор░лр▒Н - р░╕р▒Нр░╡р░пр░Вр░Чр░╛',
  rep: 'р░Жр░░р▒НтАМр░Ир░кр▒А - р░кр▒Нр░░р░др░┐р░ир░┐р░зр░┐',
  org: 'р░Ур░Жр░░р▒НтАМр░Ьр▒А - р░╕р░Вр░╕р▒Нр░е'
  },
  ta: {
    welcome: 'ро╡ро░ро╡рпЗро▒рпНроХро┐ро▒рпЛроорпН',
    governmentOfIndia: 'роЗроирпНродро┐роп роЕро░роЪрпБ',
    ministryOfLaw: 'роЪроЯрпНроЯ рооро▒рпНро▒рпБроорпН роирпАродро┐рооройрпНро▒ роЕроорпИроЪрпНроЪроХроорпН',
    applicationForm: 'роЪроЯрпНроЯ роЙродро╡ро┐ / рокрпБроХро╛ро░рпН ро╡ро┐рогрпНрогрокрпНрокрокрпН рокроЯро┐ро╡роорпН',
    legalAidApplication: 'роЪроЯрпНроЯ роЙродро╡ро┐ / рокрпБроХро╛ро░рпН ро╡ро┐рогрпНрогрокрпНрокроорпН',
    applicationFor: 'роОродро▒рпНроХро╛рой ро╡ро┐рогрпНрогрокрпНрокроорпН',
    receivedThrough: 'роорпВро▓роорпН рокрпЖро▒рокрпНрокроЯрпНроЯродрпБ',
    state: 'рооро╛роиро┐ро▓роорпН',
    district: 'рооро╛ро╡роЯрпНроЯроорпН',
    taluka: 'родро╛ро▓рпБроХро╛',
    nextStage: 'роЕроЯрпБродрпНрод роХроЯрпНроЯроорпН',
    backToDashboard: 'роЯро╛ро╖рпНрокрпЛро░рпНроЯрпБроХрпНроХрпБ родро┐ро░рпБроорпНрокро╡рпБроорпН',
    chooseItem: '-- роЙро░рпБрокрпНрокроЯро┐ропрпИродрпН родрпЗро░рпНроирпНродрпЖроЯрпБроХрпНроХро╡рпБроорпН --',
    stage: 'роХроЯрпНроЯроорпН',
    of: 'роЗро▓рпН',
    logout: 'ЁЯЪк ро╡рпЖро│ро┐ропрпЗро▒рпБ',
    language: 'ЁЯМР роорпКро┤ро┐',
    progress: 'роорпБройрпНройрпЗро▒рпНро▒роорпН',
    pleaseSelect: 'родропро╡рпБроЪрпЖропрпНродрпБ роТро░рпБ ро╡ро┐ро░рпБрокрпНрокродрпНродрпИродрпН родрпЗро░рпНроирпНродрпЖроЯрпБроХрпНроХро╡рпБроорпН',
    errorMessage: 'родропро╡рпБроЪрпЖропрпНродрпБ родрпЗро╡рпИропро╛рой роЕройрпИродрпНродрпБ рокрпБро▓роЩрпНроХро│рпИропрпБроорпН роиро┐ро░рокрпНрокро╡рпБроорпН',
    progressStatus: 'роХроЯрпНроЯроорпН 1 роЗро▓рпН 6: роЕроЯро┐рокрпНрокроЯрпИ родроХро╡ро▓рпН',
    userGuide: 'рокропройро░рпН ро╡ро┤ро┐роХро╛роЯрпНроЯро┐',
    govPortal: 'роЕро░роЪрпБ рокрпЛро░рпНроЯро▓рпН',
    terms: 'ро╡ро┐родро┐роорпБро▒рпИроХро│рпН рооро▒рпНро▒рпБроорпН роиро┐рокроирпНродройрпИроХро│рпН',
    contact: 'родрпКроЯро░рпНрокрпБ роХрпКро│рпНро│',
    phone: 'родрпКро▓рпИрокрпЗроЪро┐',
    email: 'рооро┐ройрпНройроЮрпНроЪро▓рпН',
    faq: 'роЕроЯро┐роХрпНроХроЯро┐ роХрпЗроЯрпНроХрокрпНрокроЯрпБроорпН роХрпЗро│рпНро╡ро┐роХро│рпН',
    sclsc: 'роОро╕рпНроЪро┐.роОро▓рпН.роОро╕рпН.роЪро┐ - роЙроЪрпНроЪроирпАродро┐рооройрпНро▒ роЪроЯрпНроЯ роЪрпЗро╡рпИ роХрпБро┤рпБ',
    hclsc: 'роОроЪрпН.роЪро┐.роОро▓рпН.роОро╕рпН.роЪро┐ - роЙропро░рпН роирпАродро┐рооройрпНро▒ роЪроЯрпНроЯ роЪрпЗро╡рпИ роХрпБро┤рпБ',
    slsa: 'роОро╕рпН.роОро▓рпН.роОро╕рпН.роП - рооро╛роиро┐ро▓ роЪроЯрпНроЯ роЪрпЗро╡рпИ роЖрогрпИропроорпН',
    dlsa: 'роЯро┐.роОро▓рпН.роОро╕рпН.роП - рооро╛ро╡роЯрпНроЯ роЪроЯрпНроЯ роЪрпЗро╡рпИ роЖрогрпИропроорпН',
    tlsc: 'роЯро┐.роОро▓рпН.роОро╕рпН.роЪро┐ - родро╛ро▓рпБроХро╛ роЪроЯрпНроЯ роЪрпЗро╡рпИ роХрпБро┤рпБ',
    nalsa: 'роиро▓рпНроЪро╛ - родрпЗроЪро┐роп роЪроЯрпНроЯ роЪрпЗро╡рпИ роЖрогрпИропроорпН',
    slf: 'роОро╕рпНроОро▓рпНроОроГрокрпН - роЪрпБропрооро╛роХ',
    rep: 'роЖро░рпНроЗрокро┐ - рокро┐ро░родро┐роиро┐родро┐',
    org: 'роУроЖро░рпНроЬро┐ - роиро┐ро▒рпБро╡ройроорпН'
       
  },
  bn: {
    welcome: 'рж╕рзНржмрж╛ржЧрждржо',
    governmentOfIndia: 'ржнрж╛рж░ржд рж╕рж░ржХрж╛рж░',
    ministryOfLaw: 'ржЖржЗржи ржУ ржмрж┐ржЪрж╛рж░ ржоржирзНрждрзНрж░ржгрж╛рж▓ржпрж╝',
    applicationForm: 'ржЖржЗржирж┐ рж╕рж╣рж╛ржпрж╝рждрж╛ / ржЕржнрж┐ржпрзЛржЧрзЗрж░ ржЬржирзНржп ржЖржмрзЗржжржи ржлрж░рзНржо',
    legalAidApplication: 'ржЖржЗржирж┐ рж╕рж╣рж╛ржпрж╝рждрж╛ / ржЕржнрж┐ржпрзЛржЧ ржЖржмрзЗржжржи',
    applicationFor: 'ржпрж╛рж░ ржЬржирзНржп ржЖржмрзЗржжржи',
    receivedThrough: 'ржпрж╛рж░ ржорж╛ржзрзНржпржорзЗ ржкрзНрж░рж╛ржкрзНржд',
    state: 'рж░рж╛ржЬрзНржп',
    district: 'ржЬрзЗрж▓рж╛',
    taluka: 'рждрж╛рж▓рзБржХ',
    nextStage: 'ржкрж░ржмрж░рзНрждрзА ржзрж╛ржк',
    backToDashboard: 'ржбрзНржпрж╛рж╢ржмрзЛрж░рзНржбрзЗ ржлрж┐рж░рзЗ ржпрж╛ржи',
    chooseItem: '-- ржПржХржЯрж┐ ржЖржЗржЯрзЗржо ржирж┐рж░рзНржмрж╛ржЪржи ржХрж░рзБржи --',
    stage: 'ржзрж╛ржк',
    of: 'ржПрж░',
    logout: 'ЁЯЪк рж▓ржЧ ржЖржЙржЯ',
    language: 'ЁЯМР ржнрж╛рж╖рж╛',
    progress: 'ржЕржЧрзНрж░ржЧрждрж┐',
    pleaseSelect: 'ржЕржирзБржЧрзНрж░рж╣ ржХрж░рзЗ ржПржХржЯрж┐ ржмрж┐ржХрж▓рзНржк ржирж┐рж░рзНржмрж╛ржЪржи ржХрж░рзБржи',
    errorMessage: 'ржжржпрж╝рж╛ ржХрж░рзЗ рж╕ржорж╕рзНржд ржкрзНрж░ржпрж╝рзЛржЬржирзАржпрж╝ ржШрж░ ржкрзВрж░ржг ржХрж░рзБржи',
    progressStatus: 'ржзрж╛ржк рзз ржПрж░ рзм: ржкрзНрж░рж╛ржержорж┐ржХ рждржерзНржп',
    faq: 'ржкрзНрж░рж╛ржпрж╝рж╢ржЗ ржЬрж┐ржЬрзНржЮрж╛рж╕рж┐ржд ржкрзНрж░рж╢рзНржирж╛ржмрж▓рзА',
    userGuide: 'ржмрзНржпржмрж╣рж╛рж░ржХрж╛рж░рзА ржирж┐рж░рзНржжрзЗрж╢рж┐ржХрж╛',
    govPortal: 'рж╕рж░ржХрж╛рж░рж┐ ржкрзЛрж░рзНржЯрж╛рж▓',
    terms: 'рж╢рж░рзНрждрж╛ржмрж▓рзА',
    contact: 'ржпрзЛржЧрж╛ржпрзЛржЧ ржХрж░рзБржи',
    phone: 'ржлрзЛржи',
    email: 'ржЗржорзЗржЗрж▓',
    nalsa: 'ржирж╛рж▓рж╕рж╛ - ржЬрж╛рждрзАржпрж╝ ржЖржЗржи рж╕рж╣рж╛ржпрж╝рждрж╛ ржХрж░рзНрждрзГржкржХрзНрж╖',
    sclsc: 'ржПрж╕рж╕рж┐ржПрж▓ржПрж╕рж╕рж┐ - рж╕рзБржкрзНрж░рж┐ржо ржХрзЛрж░рзНржЯ ржЖржЗржи рж╕рж╣рж╛ржпрж╝рждрж╛ ржХржорж┐ржЯрж┐',
    hclsc: 'ржПржЗржЪрж╕рж┐ржПрж▓ржПрж╕рж╕рж┐ - рж╣рж╛ржЗ ржХрзЛрж░рзНржЯ ржЖржЗржи рж╕рж╣рж╛ржпрж╝рждрж╛ ржХржорж┐ржЯрж┐',
    slsa: 'ржПрж╕ржПрж▓ржПрж╕ржП - рж░рж╛ржЬрзНржп ржЖржЗржи рж╕рж╣рж╛ржпрж╝рждрж╛ ржХрж░рзНрждрзГржкржХрзНрж╖',
    dlsa: 'ржбрж┐ржПрж▓ржПрж╕ржП - ржЬрзЗрж▓рж╛ ржЖржЗржи рж╕рж╣рж╛ржпрж╝рждрж╛ ржХрж░рзНрждрзГржкржХрзНрж╖',
    tlsc: 'ржЯрж┐ржПрж▓ржПрж╕рж╕рж┐ - рждрж╣рж╢рж┐рж▓ ржЖржЗржи рж╕рж╣рж╛ржпрж╝рждрж╛ ржХржорж┐ржЯрж┐',
    slf: 'ржПрж╕ржПрж▓ржПржл - рж╕рзНржмржпрж╝ржВ',
    rep: 'ржЖрж░ржЗржкрж┐ - ржкрзНрж░рждрж┐ржирж┐ржзрж┐',
    org: 'ржУржЖрж░ржЬрж┐ - рж╕ржВрж╕рзНржерж╛'
  },
      
  // Add other languages as needed
};

const Stage1 = () => {
  const location = useLocation();
  const navigate = useNavigate();
  const queryParams = new URLSearchParams(location.search);
  const langParam = queryParams.get('lang')?.toLowerCase() || localStorage.getItem('preferredLanguage') || 'en';
  const [t, setT] = useState(translations.en);
  const [loading, setLoading] = useState(true);
  const [formData, setFormData] = useState({
    applicationType: '',
    receivedThrough: 'SLF - Self', // Default value
    state: '',
    district: '',
    taluka: ''
  });
  const [error, setError] = useState('');
  const [selectedLanguage, setSelectedLanguage] = useState(langParam);
  const [isAuthenticated, setIsAuthenticated] = useState(false);
  const [user, setUser] = useState(null);
  const [showAnimation, setShowAnimation] = useState(false);

  // Get token from location state or localStorage
  const token = location.state?.token || localStorage.getItem('token');

  useEffect(() => {
    const selected = translations[selectedLanguage] || translations['en'];
    setT(selected);
    // Update URL with selected language
    const newUrl = new URL(window.location.href);
    newUrl.searchParams.set('lang', selectedLanguage);
    window.history.pushState({}, '', newUrl);
  }, [selectedLanguage]);

  // Verify authentication when component mounts
  useEffect(() => {
    if (!token) {
      navigate(`/login?lang=${selectedLanguage}`);
      return;
    }

    fetch('https://prathinidhi-backend-r8dj.onrender.com/dashboard', {
      method: 'GET',
      headers: {
        Authorization: `Bearer ${token}`,
        Accept: 'application/json',
      },
    })
      .then((res) => {
        if (!res.ok) throw new Error('Invalid token');
        return res.json();
      })
      .then((data) => {
        setUser(data.user);
        setIsAuthenticated(true);
      })
      .catch(() => {
        localStorage.removeItem('token');
        navigate(`/login?lang=${selectedLanguage}`);
      })
      .finally(() => setLoading(false));
  }, [token, selectedLanguage, navigate]);

  // Animation effect when component mounts
  useEffect(() => {
    setTimeout(() => {
      setShowAnimation(true);
    }, 300);
  }, []);

  const handleInputChange = (e) => {
    const { name, value } = e.target;
    setFormData({
      ...formData,
      [name]: value
    });
  };

  const handleLanguageChange = (e) => {
    setSelectedLanguage(e.target.value);
  };

  const handleLogout = () => {
    localStorage.removeItem('token');
    navigate(`/login?lang=${selectedLanguage}`);
  };

  const handleNext = () => {
    if (!formData.applicationType || !formData.state || !formData.district || !formData.taluka) {
      setError(t.errorMessage);
      // Shake animation for error
      const formElement = document.querySelector('.stage1-form');
      formElement.classList.add('shake');
      setTimeout(() => {
        formElement.classList.remove('shake');
      }, 500);
      return;
    }

    // Navigate to next stage with form data and token
    navigate('/stage2', {
      state: { 
        token,
        formData: { ...formData }
      },
      search: `?lang=${selectedLanguage}`
    });
  };

  const handleBackToDashboard = () => {
    navigate(`/dashboard?lang=${selectedLanguage}`);
  };

  // Styles object
  const styles = {
    header: {
      backgroundColor: "#0b5394",
      color: "#fff",
      padding: "10px 0",
      position: "fixed",
      top: 0,
      width: "100%",
      zIndex: 999,
      boxShadow: "0 2px 5px rgba(0,0,0,0.1)"
    },
    headerContainer: {
      maxWidth: "1200px",
      margin: "0 auto",
      padding: "0 20px",
      display: "flex",
      justifyContent: "space-between",
      alignItems: "center"
    },
    logoSection: {
      display: "flex",
      alignItems: "center",
      gap: "15px"
    },
    logo: {
      height: "48px"
    },
    title: {
      fontSize: "26px",
      fontWeight: "bold",
      margin: 0,
      color: "white"
    },
    subtitle: {
      fontSize: "13px",
      margin: 0,
      color: "#e0e0e0"
    },
    rightNav: {
      display: 'flex',
      alignItems: 'center',
      gap: '1rem'
    },
    languageSelect: {
      padding: '0.5rem',
      borderRadius: '4px',
      border: '1px solid #d1d5db',
      background: '#f3f4f6',
      cursor: 'pointer'
    },
    logoutBtn: {
      background: '#ef4444',
      color: 'white',
      border: 'none',
      padding: '0.6rem 1.2rem',
      borderRadius: '4px',
      cursor: 'pointer',
      fontWeight: '500',
      transition: 'background 0.2s ease'
    },
    // Progress bar container
    progressContainer: {
      position: 'fixed',
      top: '80px',
      left: 0,
      width: '100%',
      backgroundColor: '#f0f4f8',
      padding: '15px 0',
      zIndex: 998,
      boxShadow: '0 2px 4px rgba(0,0,0,0.1)',
      transition: 'all 0.3s ease'
    },
    progressInner: {
      maxWidth: '1200px',
      margin: '0 auto',
      padding: '0 20px'
    },
    progressText: {
      display: 'flex',
      justifyContent: 'space-between',
      marginBottom: '5px',
      color: '#333',
      fontWeight: 'bold'
    },
    progressBarOuter: {
      height: '12px',
      backgroundColor: '#e2e8f0',
      borderRadius: '6px',
      overflow: 'hidden'
    },
    progressBarInner: {
      height: '100%',
      width: '16.67%', // 1/6 = 16.67%
      backgroundColor: '#0b5394',
      borderRadius: '6px',
      transition: 'width 1s ease-in-out'
    },
    progressStages: {
      display: 'flex',
      justifyContent: 'space-between',
      marginTop: '5px'
    },
    progressStage: {
      width: '30px',
      height: '30px',
      borderRadius: '50%',
      backgroundColor: '#e2e8f0',
      display: 'flex',
      justifyContent: 'center',
      alignItems: 'center',
      fontSize: '14px',
      fontWeight: 'bold',
      color: '#666',
      transition: 'all 0.3s ease'
    },
    activeStage: {
      backgroundColor: '#0b5394',
      color: 'white',
      transform: 'scale(1.2)'
    },
    // Buttons at the bottom
    buttonsContainer: {
      display: 'flex',
      justifyContent: 'space-between',
      marginTop: '30px'
    },
    buttonSecondary: {
      backgroundColor: '#e2e8f0',
      color: '#333',
      border: 'none',
      borderRadius: '4px',
      padding: '10px 20px',
      cursor: 'pointer',
      transition: 'all 0.3s ease'
    },
    buttonPrimary: {
      backgroundColor: '#0b5394',
      color: 'white',
      border: 'none',
      borderRadius: '4px',
      padding: '10px 20px',
      cursor: 'pointer',
      transition: 'all 0.3s ease'
    },
    // Form styles
    formContainer: {
      backgroundColor: 'white', 
      borderRadius: '8px',
      boxShadow: '0 2px 10px rgba(0,0,0,0.1)',
      padding: '30px',
      margin: '20px 0',
      transition: 'transform 0.3s ease, opacity 0.3s ease',
    },
    formTitle: {
      color: '#0b5394',
      borderBottom: '2px solid #0b5394',
      paddingBottom: '10px',
      marginBottom: '20px'
    },
    formRow: {
      display: 'flex',
      flexWrap: 'wrap',
      margin: '0 -10px 20px',
      alignItems: 'center'
    },
    formColumn: {
      flex: '1 1 300px',
      padding: '0 10px'
    },
    formLabel: {
      display: 'block',
      marginBottom: '8px',
      color: '#333',
      fontWeight: '500'
    },
    formSelect: {
      width: '100%',
      padding: '10px',
      borderRadius: '4px',
      border: '1px solid #d1d5db',
      fontSize: '16px'
    },
    requiredField: {
      color: 'red'
    },
    errorText: {
      color: 'red',
      marginTop: '10px',
      fontWeight: 'bold',
      textAlign: 'center'
    }
  };

  if (loading) return <p style={{ textAlign: 'center', marginTop: '100px' }}>Loading...</p>;

  return (
    <div style={{ 
      fontFamily: "Segoe UI, sans-serif", 
      minHeight: '100vh', 
      display: 'flex', 
      flexDirection: 'column', 
      background: 'linear-gradient(to bottom right, #f3f4f6, #e0f2fe)',
      paddingTop: "150px" // Increased to account for fixed header and progress bar
    }}>
      <style>{`
        @keyframes fadeIn {
          from { opacity: 0; transform: translateY(20px); }
          to { opacity: 1; transform: translateY(0); }
        }
        @keyframes progressAnimation {
          from { width: 0%; }
          to { width: 16.67%; }
        }
        @keyframes pulse {
          0% { box-shadow: 0 0 0 0 rgba(11, 83, 148, 0.7); }
          70% { box-shadow: 0 0 0 10px rgba(11, 83, 148, 0); }
          100% { box-shadow: 0 0 0 0 rgba(11, 83, 148, 0); }
        }
        @keyframes shake {
          0%, 100% { transform: translateX(0); }
          10%, 30%, 50%, 70%, 90% { transform: translateX(-5px); }
          20%, 40%, 60%, 80% { transform: translateX(5px); }
        }
        .stage1-form.shake {
          animation: shake 0.5s cubic-bezier(.36,.07,.19,.97) both;
        }
        .form-row {
          opacity: 0;
          transform: translateY(20px);
          animation: fadeIn 0.5s forwards;
        }
        .form-row:nth-child(1) { animation-delay: 0.2s; }
        .form-row:nth-child(2) { animation-delay: 0.4s; }
        .form-row:nth-child(3) { animation-delay: 0.6s; }
        .form-buttons { animation-delay: 0.8s; }
        .active-stage {
          animation: pulse 2s infinite;
        }
        .progress-bar-inner {
          animation: progressAnimation 1.5s ease-out forwards;
        }
        .form-select:focus {
          outline: none;
          border-color: #0b5394;
          box-shadow: 0 0 0 3px rgba(11, 83, 148, 0.3);
        }
        .btn-hover:hover {
          transform: translateY(-2px);
          box-shadow: 0 4px 6px rgba(0,0,0,0.1);
        }
        .language-selector {
          position: relative;
        }
        .language-selector select {
          appearance: none;
          padding-right: 25px;
        }
        .language-selector::after {
          content: 'тЦ╝';
          font-size: 12px;
          position: absolute;
          right: 10px;
          top: 50%;
          transform: translateY(-50%);
          pointer-events: none;
        }
        .form-container:hover {
          box-shadow: 0 5px 15px rgba(0,0,0,0.1);
        }
        .footer { background: #111827; color: #d1d5db; padding: 2rem; margin-top: auto; }
        .footer h4 { color: white; margin-bottom: 0.5rem; }
        .footer ul { list-style: none; padding: 0; }
        .footer li { margin-bottom: 0.3rem; }
        .footer a { color: #93c5fd; text-decoration: none; }
        .footer a:hover { text-decoration: underline; }
      `}</style>
      
      {/* Header - Same as Dashboard */}
      <header style={styles.header}>
        <div style={styles.headerContainer}>
          <div style={styles.logoSection}>
            <img src="/prathinidhi.png" alt="Emblem" style={styles.logo} />
            <div>
              <h1 style={styles.title}>Prathinidhi</h1>
              <p style={styles.subtitle}>
                рд░рд╛рд╖реНрдЯреНрд░реАрдп рдмрд╣реБрднрд╛рд╖реА рд╡рд┐рдзрд┐рдХ рдлреЙрд░реНрдо рдкреЛрд░реНрдЯрд▓ | National Legal Form Portal
              </p>
            </div>
          </div>
          <div style={styles.rightNav}>
            <div className="language-selector">
              <select
                style={styles.languageSelect}
                value={selectedLanguage}
                onChange={handleLanguageChange}
              >
                <option value="en">English</option>
                <option value="hi">рд╣рд┐рдВрджреА</option>
                <option value="ta">родрооро┐ро┤рпН</option>
                <option value="te">р░др▒Жр░▓р▒Бр░Чр▒Б</option>
                <option value="bn">ржмрж╛ржВрж▓рж╛</option>
              </select>
            </div>
            <button 
              style={styles.logoutBtn} 
              onClick={handleLogout}
              className="btn-hover"
            >
              {t.logout}
            </button>
          </div>
        </div>
      </header>

      {/* Progress Bar - Fixed Position */}
      <div style={styles.progressContainer}>
        <div style={styles.progressInner}>
          <div style={styles.progressText}>
            <span>{t.progress}: {t.stage} 1 {t.of} 6</span>
            <span>{t.progressStatus}</span>
          </div>
          <div style={styles.progressBarOuter}>
            <div style={styles.progressBarInner} className="progress-bar-inner"></div>
          </div>
          <div style={styles.progressStages}>
            {[1, 2, 3, 4, 5, 6].map((stage) => (
              <div 
                key={stage} 
                style={{
                  ...styles.progressStage,
                  ...(stage === 1 ? styles.activeStage : {})
                }}
                className={stage === 1 ? 'active-stage' : ''}
              >
                {stage}
              </div>
            ))}
          </div>
        </div>
      </div>

      <div style={{ maxWidth: '1200px', margin: '0 auto', padding: '0 20px', width: '100%' }}>
        {/* Form Title */}
        
        {/* Main Form */}
        <div 
          className="stage1-form"
          style={{
            ...styles.formContainer,
            opacity: showAnimation ? 1 : 0,
            transform: showAnimation ? 'translateY(0)' : 'translateY(20px)'
          }}
        >
          <h2 style={styles.formTitle}>{t.legalAidApplication}</h2>

          {error && <div style={styles.errorText}>{error}</div>}
          
          <div className="form-row" style={styles.formRow}>
            <div style={styles.formColumn}>
              <label style={styles.formLabel}>
                {t.applicationFor} <span style={styles.requiredField}>*</span>:
              </label>
              <select 
                name="applicationType"
                value={formData.applicationType}
                onChange={handleInputChange}
                style={styles.formSelect}
                className="form-select"
                required
              >
                <option value="">{t.chooseItem}</option>
                <option value="nalsa">{t.nalsa}</option>
                <option value="sclsc">{t.sclsc}</option>
                <option value="hclsc">{t.hclsc}</option>
                <option value="slsa">{t.slsa}</option>
                <option value="dlsa">{t.dlsa}</option>
                <option value="tlsc">{t.tlsc}</option>

              </select>
            </div>
            <div style={styles.formColumn}>
              <label style={styles.formLabel}>
                {t.receivedThrough} <span style={styles.requiredField}>*</span>:
              </label>
              <select 
                name="receivedThrough"
                value={formData.receivedThrough}
                onChange={handleInputChange}
                style={styles.formSelect}
                className="form-select"
                required
              >
                <option value="slf">{t.slf}</option>
                <option value="rep">{t.rep}</option>
                <option value="org">{t.org}</option>
              </select>
            </div>
          </div>

          {/* Buttons */}
          <div className="form-row form-buttons" style={styles.buttonsContainer}>
            <button 
              onClick={handleBackToDashboard} 
              style={styles.buttonSecondary}
              className="btn-hover"
            >
              {t.backToDashboard}
            </button>
            <button 
              onClick={handleNext} 
              style={styles.buttonPrimary}
              className="btn-hover"
            >
              {t.nextStage} тЖТ
            </button>
          </div>
        </div>
      </div>

      <footer className="footer">
        <div style={{ display: 'grid', gridTemplateColumns: 'repeat(auto-fit, minmax(220px, 1fr))', gap: '1.5rem' }}>
          <div>
            <h4>{t.quickLinks}</h4>
            <ul>
              <li><a href="/faqs">{t.faqs}</a></li>
              <li><a href="/user-guide">{t.userGuide}</a></li>
              <li><a href="https://www.india.gov.in/" target="_blank" rel="noopener noreferrer">{t.govPortal}</a></li>
              <li><a href="/terms-and-conditions">{t.terms}</a></li>
            </ul>
          </div>
          <div>
            <h4>{t.contact}</h4>
            <ul>
              <li>{t.phone}: +91-1234-567890</li>
              <li>{t.email}: support@prathinidhi.in</li>
            </ul>
          </div>
        </div>
      </footer>
    </div>
  );
};

export default Stage1;